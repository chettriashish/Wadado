//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCFTest.ActivitiesService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataContractBase", Namespace="http://schemas.datacontract.org/2004/07/Core.Common.ServiceModel")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFTest.ActivitiesService.ActivityDetailsDataContract))]
    public partial class DataContractBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActivityDetailsDataContract", Namespace="wadado.in")]
    [System.SerializableAttribute()]
    public partial class ActivityDetailsDataContract : WCFTest.ActivitiesService.DataContractBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ActivityImagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ActivityImagesURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityLocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivitySubCategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int[] AllActivityDatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] AllActivityTimesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CancellationPolicyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CostForChildField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DefaultImageURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DifficultyLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DifficultyRatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistanceFromNearestCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxPeopleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinPeopleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumAdultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumChildrenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool PermitRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> ReviewsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UserRatingField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityCategory {
            get {
                return this.ActivityCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityCategoryField, value) != true)) {
                    this.ActivityCategoryField = value;
                    this.RaisePropertyChanged("ActivityCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ActivityImages {
            get {
                return this.ActivityImagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityImagesField, value) != true)) {
                    this.ActivityImagesField = value;
                    this.RaisePropertyChanged("ActivityImages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ActivityImagesURL {
            get {
                return this.ActivityImagesURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityImagesURLField, value) != true)) {
                    this.ActivityImagesURLField = value;
                    this.RaisePropertyChanged("ActivityImagesURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityKey {
            get {
                return this.ActivityKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityKeyField, value) != true)) {
                    this.ActivityKeyField = value;
                    this.RaisePropertyChanged("ActivityKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityLocation {
            get {
                return this.ActivityLocationField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityLocationField, value) != true)) {
                    this.ActivityLocationField = value;
                    this.RaisePropertyChanged("ActivityLocation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivitySubCategory {
            get {
                return this.ActivitySubCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivitySubCategoryField, value) != true)) {
                    this.ActivitySubCategoryField = value;
                    this.RaisePropertyChanged("ActivitySubCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int[] AllActivityDates {
            get {
                return this.AllActivityDatesField;
            }
            set {
                if ((object.ReferenceEquals(this.AllActivityDatesField, value) != true)) {
                    this.AllActivityDatesField = value;
                    this.RaisePropertyChanged("AllActivityDates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] AllActivityTimes {
            get {
                return this.AllActivityTimesField;
            }
            set {
                if ((object.ReferenceEquals(this.AllActivityTimesField, value) != true)) {
                    this.AllActivityTimesField = value;
                    this.RaisePropertyChanged("AllActivityTimes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CancellationPolicy {
            get {
                return this.CancellationPolicyField;
            }
            set {
                if ((object.ReferenceEquals(this.CancellationPolicyField, value) != true)) {
                    this.CancellationPolicyField = value;
                    this.RaisePropertyChanged("CancellationPolicy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Cost {
            get {
                return this.CostField;
            }
            set {
                if ((this.CostField.Equals(value) != true)) {
                    this.CostField = value;
                    this.RaisePropertyChanged("Cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CostForChild {
            get {
                return this.CostForChildField;
            }
            set {
                if ((this.CostForChildField.Equals(value) != true)) {
                    this.CostForChildField = value;
                    this.RaisePropertyChanged("CostForChild");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DefaultImageURL {
            get {
                return this.DefaultImageURLField;
            }
            set {
                if ((object.ReferenceEquals(this.DefaultImageURLField, value) != true)) {
                    this.DefaultImageURLField = value;
                    this.RaisePropertyChanged("DefaultImageURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DifficultyLevel {
            get {
                return this.DifficultyLevelField;
            }
            set {
                if ((object.ReferenceEquals(this.DifficultyLevelField, value) != true)) {
                    this.DifficultyLevelField = value;
                    this.RaisePropertyChanged("DifficultyLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DifficultyRating {
            get {
                return this.DifficultyRatingField;
            }
            set {
                if ((this.DifficultyRatingField.Equals(value) != true)) {
                    this.DifficultyRatingField = value;
                    this.RaisePropertyChanged("DifficultyRating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistanceFromNearestCity {
            get {
                return this.DistanceFromNearestCityField;
            }
            set {
                if ((object.ReferenceEquals(this.DistanceFromNearestCityField, value) != true)) {
                    this.DistanceFromNearestCityField = value;
                    this.RaisePropertyChanged("DistanceFromNearestCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationField, value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageURL {
            get {
                return this.ImageURLField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageURLField, value) != true)) {
                    this.ImageURLField = value;
                    this.RaisePropertyChanged("ImageURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocationCode {
            get {
                return this.LocationCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationCodeField, value) != true)) {
                    this.LocationCodeField = value;
                    this.RaisePropertyChanged("LocationCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxPeople {
            get {
                return this.MaxPeopleField;
            }
            set {
                if ((this.MaxPeopleField.Equals(value) != true)) {
                    this.MaxPeopleField = value;
                    this.RaisePropertyChanged("MaxPeople");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinPeople {
            get {
                return this.MinPeopleField;
            }
            set {
                if ((this.MinPeopleField.Equals(value) != true)) {
                    this.MinPeopleField = value;
                    this.RaisePropertyChanged("MinPeople");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumAdults {
            get {
                return this.NumAdultsField;
            }
            set {
                if ((this.NumAdultsField.Equals(value) != true)) {
                    this.NumAdultsField = value;
                    this.RaisePropertyChanged("NumAdults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumChildren {
            get {
                return this.NumChildrenField;
            }
            set {
                if ((this.NumChildrenField.Equals(value) != true)) {
                    this.NumChildrenField = value;
                    this.RaisePropertyChanged("NumChildren");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool PermitRequired {
            get {
                return this.PermitRequiredField;
            }
            set {
                if ((this.PermitRequiredField.Equals(value) != true)) {
                    this.PermitRequiredField = value;
                    this.RaisePropertyChanged("PermitRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> Reviews {
            get {
                return this.ReviewsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReviewsField, value) != true)) {
                    this.ReviewsField = value;
                    this.RaisePropertyChanged("Reviews");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UserRating {
            get {
                return this.UserRatingField;
            }
            set {
                if ((this.UserRatingField.Equals(value) != true)) {
                    this.UserRatingField = value;
                    this.RaisePropertyChanged("UserRating");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActivitiesMaster", Namespace="http://www.wadado.in")]
    [System.SerializableAttribute()]
    public partial class ActivitiesMaster : WCFTest.ActivitiesService.EntityBase {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivitesKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityTypeKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdditionalFeaturesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AdviceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CancellationPolicyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CostForChildField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal DifficultyRatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EntityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IncludedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPermitRequiredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsValidatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxAdultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxChildrenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinAdultsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MinChildrenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OurReviewField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PickupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThingsToCarryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivitesKey {
            get {
                return this.ActivitesKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivitesKeyField, value) != true)) {
                    this.ActivitesKeyField = value;
                    this.RaisePropertyChanged("ActivitesKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityTypeKey {
            get {
                return this.ActivityTypeKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityTypeKeyField, value) != true)) {
                    this.ActivityTypeKeyField = value;
                    this.RaisePropertyChanged("ActivityTypeKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalFeatures {
            get {
                return this.AdditionalFeaturesField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalFeaturesField, value) != true)) {
                    this.AdditionalFeaturesField = value;
                    this.RaisePropertyChanged("AdditionalFeatures");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Advice {
            get {
                return this.AdviceField;
            }
            set {
                if ((object.ReferenceEquals(this.AdviceField, value) != true)) {
                    this.AdviceField = value;
                    this.RaisePropertyChanged("Advice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CancellationPolicy {
            get {
                return this.CancellationPolicyField;
            }
            set {
                if ((object.ReferenceEquals(this.CancellationPolicyField, value) != true)) {
                    this.CancellationPolicyField = value;
                    this.RaisePropertyChanged("CancellationPolicy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Cost {
            get {
                return this.CostField;
            }
            set {
                if ((this.CostField.Equals(value) != true)) {
                    this.CostField = value;
                    this.RaisePropertyChanged("Cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CostForChild {
            get {
                return this.CostForChildField;
            }
            set {
                if ((this.CostForChildField.Equals(value) != true)) {
                    this.CostForChildField = value;
                    this.RaisePropertyChanged("CostForChild");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal DifficultyRating {
            get {
                return this.DifficultyRatingField;
            }
            set {
                if ((this.DifficultyRatingField.Equals(value) != true)) {
                    this.DifficultyRatingField = value;
                    this.RaisePropertyChanged("DifficultyRating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Duration {
            get {
                return this.DurationField;
            }
            set {
                if ((object.ReferenceEquals(this.DurationField, value) != true)) {
                    this.DurationField = value;
                    this.RaisePropertyChanged("Duration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EntityId {
            get {
                return this.EntityIdField;
            }
            set {
                if ((object.ReferenceEquals(this.EntityIdField, value) != true)) {
                    this.EntityIdField = value;
                    this.RaisePropertyChanged("EntityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Included {
            get {
                return this.IncludedField;
            }
            set {
                if ((object.ReferenceEquals(this.IncludedField, value) != true)) {
                    this.IncludedField = value;
                    this.RaisePropertyChanged("Included");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPermitRequired {
            get {
                return this.IsPermitRequiredField;
            }
            set {
                if ((this.IsPermitRequiredField.Equals(value) != true)) {
                    this.IsPermitRequiredField = value;
                    this.RaisePropertyChanged("IsPermitRequired");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValidated {
            get {
                return this.IsValidatedField;
            }
            set {
                if ((this.IsValidatedField.Equals(value) != true)) {
                    this.IsValidatedField = value;
                    this.RaisePropertyChanged("IsValidated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxAdults {
            get {
                return this.MaxAdultsField;
            }
            set {
                if ((this.MaxAdultsField.Equals(value) != true)) {
                    this.MaxAdultsField = value;
                    this.RaisePropertyChanged("MaxAdults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxChildren {
            get {
                return this.MaxChildrenField;
            }
            set {
                if ((this.MaxChildrenField.Equals(value) != true)) {
                    this.MaxChildrenField = value;
                    this.RaisePropertyChanged("MaxChildren");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinAdults {
            get {
                return this.MinAdultsField;
            }
            set {
                if ((this.MinAdultsField.Equals(value) != true)) {
                    this.MinAdultsField = value;
                    this.RaisePropertyChanged("MinAdults");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinChildren {
            get {
                return this.MinChildrenField;
            }
            set {
                if ((this.MinChildrenField.Equals(value) != true)) {
                    this.MinChildrenField = value;
                    this.RaisePropertyChanged("MinChildren");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OurReview {
            get {
                return this.OurReviewField;
            }
            set {
                if ((object.ReferenceEquals(this.OurReviewField, value) != true)) {
                    this.OurReviewField = value;
                    this.RaisePropertyChanged("OurReview");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Pickup {
            get {
                return this.PickupField;
            }
            set {
                if ((object.ReferenceEquals(this.PickupField, value) != true)) {
                    this.PickupField = value;
                    this.RaisePropertyChanged("Pickup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThingsToCarry {
            get {
                return this.ThingsToCarryField;
            }
            set {
                if ((object.ReferenceEquals(this.ThingsToCarryField, value) != true)) {
                    this.ThingsToCarryField = value;
                    this.RaisePropertyChanged("ThingsToCarry");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EntityBase", Namespace="http://schemas.datacontract.org/2004/07/Core.Common.Core")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WCFTest.ActivitiesService.ActivitiesMaster))]
    public partial class EntityBase : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ActivityBookingDataContract", Namespace="wadado.in")]
    [System.SerializableAttribute()]
    public partial class ActivityBookingDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityBookingKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ActivityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime BookingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BookingNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChildParticipantsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ConfirmationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfirmedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatedByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GuestKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCancelledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsConfirmedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsDeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPaymentCompleteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParticipantsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PaymentAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal RefundAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionKeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ThumbnailImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityBookingKey {
            get {
                return this.ActivityBookingKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityBookingKeyField, value) != true)) {
                    this.ActivityBookingKeyField = value;
                    this.RaisePropertyChanged("ActivityBookingKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityKey {
            get {
                return this.ActivityKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityKeyField, value) != true)) {
                    this.ActivityKeyField = value;
                    this.RaisePropertyChanged("ActivityKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ActivityName {
            get {
                return this.ActivityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ActivityNameField, value) != true)) {
                    this.ActivityNameField = value;
                    this.RaisePropertyChanged("ActivityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BookingDate {
            get {
                return this.BookingDateField;
            }
            set {
                if ((this.BookingDateField.Equals(value) != true)) {
                    this.BookingDateField = value;
                    this.RaisePropertyChanged("BookingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BookingNumber {
            get {
                return this.BookingNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.BookingNumberField, value) != true)) {
                    this.BookingNumberField = value;
                    this.RaisePropertyChanged("BookingNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChildParticipants {
            get {
                return this.ChildParticipantsField;
            }
            set {
                if ((this.ChildParticipantsField.Equals(value) != true)) {
                    this.ChildParticipantsField = value;
                    this.RaisePropertyChanged("ChildParticipants");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ConfirmationDate {
            get {
                return this.ConfirmationDateField;
            }
            set {
                if ((this.ConfirmationDateField.Equals(value) != true)) {
                    this.ConfirmationDateField = value;
                    this.RaisePropertyChanged("ConfirmationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfirmedBy {
            get {
                return this.ConfirmedByField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfirmedByField, value) != true)) {
                    this.ConfirmedByField = value;
                    this.RaisePropertyChanged("ConfirmedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Cost {
            get {
                return this.CostField;
            }
            set {
                if ((this.CostField.Equals(value) != true)) {
                    this.CostField = value;
                    this.RaisePropertyChanged("Cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatedBy {
            get {
                return this.CreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatedByField, value) != true)) {
                    this.CreatedByField = value;
                    this.RaisePropertyChanged("CreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency {
            get {
                return this.CurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyField, value) != true)) {
                    this.CurrencyField = value;
                    this.RaisePropertyChanged("Currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GuestKey {
            get {
                return this.GuestKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.GuestKeyField, value) != true)) {
                    this.GuestKeyField = value;
                    this.RaisePropertyChanged("GuestKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCancelled {
            get {
                return this.IsCancelledField;
            }
            set {
                if ((this.IsCancelledField.Equals(value) != true)) {
                    this.IsCancelledField = value;
                    this.RaisePropertyChanged("IsCancelled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsConfirmed {
            get {
                return this.IsConfirmedField;
            }
            set {
                if ((this.IsConfirmedField.Equals(value) != true)) {
                    this.IsConfirmedField = value;
                    this.RaisePropertyChanged("IsConfirmed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDeleted {
            get {
                return this.IsDeletedField;
            }
            set {
                if ((this.IsDeletedField.Equals(value) != true)) {
                    this.IsDeletedField = value;
                    this.RaisePropertyChanged("IsDeleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPaymentComplete {
            get {
                return this.IsPaymentCompleteField;
            }
            set {
                if ((this.IsPaymentCompleteField.Equals(value) != true)) {
                    this.IsPaymentCompleteField = value;
                    this.RaisePropertyChanged("IsPaymentComplete");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Participants {
            get {
                return this.ParticipantsField;
            }
            set {
                if ((this.ParticipantsField.Equals(value) != true)) {
                    this.ParticipantsField = value;
                    this.RaisePropertyChanged("Participants");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PaymentAmount {
            get {
                return this.PaymentAmountField;
            }
            set {
                if ((this.PaymentAmountField.Equals(value) != true)) {
                    this.PaymentAmountField = value;
                    this.RaisePropertyChanged("PaymentAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal RefundAmount {
            get {
                return this.RefundAmountField;
            }
            set {
                if ((this.RefundAmountField.Equals(value) != true)) {
                    this.RefundAmountField = value;
                    this.RaisePropertyChanged("RefundAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionKey {
            get {
                return this.SessionKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionKeyField, value) != true)) {
                    this.SessionKeyField = value;
                    this.RaisePropertyChanged("SessionKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ThumbnailImage {
            get {
                return this.ThumbnailImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ThumbnailImageField, value) != true)) {
                    this.ThumbnailImageField = value;
                    this.RaisePropertyChanged("ThumbnailImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Time {
            get {
                return this.TimeField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeField, value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ActivitiesService.IActivitiesService")]
    public interface IActivitiesService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActivitiesService/GetAllActivities", ReplyAction="http://tempuri.org/IActivitiesService/GetAllActivitiesResponse")]
        WCFTest.ActivitiesService.ActivityDetailsDataContract GetAllActivities(string locationKey, string activityKey, string userAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActivitiesService/GetAllActivities", ReplyAction="http://tempuri.org/IActivitiesService/GetAllActivitiesResponse")]
        System.Threading.Tasks.Task<WCFTest.ActivitiesService.ActivityDetailsDataContract> GetAllActivitiesAsync(string locationKey, string activityKey, string userAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActivitiesService/GetAllBookedActivities", ReplyAction="http://tempuri.org/IActivitiesService/GetAllBookedActivitiesResponse")]
        WCFTest.ActivitiesService.ActivitiesMaster[] GetAllBookedActivities(string loginName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActivitiesService/GetAllBookedActivities", ReplyAction="http://tempuri.org/IActivitiesService/GetAllBookedActivitiesResponse")]
        System.Threading.Tasks.Task<WCFTest.ActivitiesService.ActivitiesMaster[]> GetAllBookedActivitiesAsync(string loginName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActivitiesService/CheckForActivityAvailablity", ReplyAction="http://tempuri.org/IActivitiesService/CheckForActivityAvailablityResponse")]
        bool CheckForActivityAvailablity(string activityKey, int adults, int children, System.DateTime bookingDate, string time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActivitiesService/CheckForActivityAvailablity", ReplyAction="http://tempuri.org/IActivitiesService/CheckForActivityAvailablityResponse")]
        System.Threading.Tasks.Task<bool> CheckForActivityAvailablityAsync(string activityKey, int adults, int children, System.DateTime bookingDate, string time);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActivitiesService/BookActivityForUser", ReplyAction="http://tempuri.org/IActivitiesService/BookActivityForUserResponse")]
        WCFTest.ActivitiesService.ActivityBookingDataContract BookActivityForUser(WCFTest.ActivitiesService.ActivityBookingDataContract bookingDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActivitiesService/BookActivityForUser", ReplyAction="http://tempuri.org/IActivitiesService/BookActivityForUserResponse")]
        System.Threading.Tasks.Task<WCFTest.ActivitiesService.ActivityBookingDataContract> BookActivityForUserAsync(WCFTest.ActivitiesService.ActivityBookingDataContract bookingDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActivitiesService/GetUsersCurrentActivityCart", ReplyAction="http://tempuri.org/IActivitiesService/GetUsersCurrentActivityCartResponse")]
        WCFTest.ActivitiesService.ActivityBookingDataContract[] GetUsersCurrentActivityCart(string sessionKey, string userAgent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IActivitiesService/GetUsersCurrentActivityCart", ReplyAction="http://tempuri.org/IActivitiesService/GetUsersCurrentActivityCartResponse")]
        System.Threading.Tasks.Task<WCFTest.ActivitiesService.ActivityBookingDataContract[]> GetUsersCurrentActivityCartAsync(string sessionKey, string userAgent);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IActivitiesServiceChannel : WCFTest.ActivitiesService.IActivitiesService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ActivitiesServiceClient : System.ServiceModel.ClientBase<WCFTest.ActivitiesService.IActivitiesService>, WCFTest.ActivitiesService.IActivitiesService {
        
        public ActivitiesServiceClient() {
        }
        
        public ActivitiesServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ActivitiesServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ActivitiesServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ActivitiesServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFTest.ActivitiesService.ActivityDetailsDataContract GetAllActivities(string locationKey, string activityKey, string userAgent) {
            return base.Channel.GetAllActivities(locationKey, activityKey, userAgent);
        }
        
        public System.Threading.Tasks.Task<WCFTest.ActivitiesService.ActivityDetailsDataContract> GetAllActivitiesAsync(string locationKey, string activityKey, string userAgent) {
            return base.Channel.GetAllActivitiesAsync(locationKey, activityKey, userAgent);
        }
        
        public WCFTest.ActivitiesService.ActivitiesMaster[] GetAllBookedActivities(string loginName) {
            return base.Channel.GetAllBookedActivities(loginName);
        }
        
        public System.Threading.Tasks.Task<WCFTest.ActivitiesService.ActivitiesMaster[]> GetAllBookedActivitiesAsync(string loginName) {
            return base.Channel.GetAllBookedActivitiesAsync(loginName);
        }
        
        public bool CheckForActivityAvailablity(string activityKey, int adults, int children, System.DateTime bookingDate, string time) {
            return base.Channel.CheckForActivityAvailablity(activityKey, adults, children, bookingDate, time);
        }
        
        public System.Threading.Tasks.Task<bool> CheckForActivityAvailablityAsync(string activityKey, int adults, int children, System.DateTime bookingDate, string time) {
            return base.Channel.CheckForActivityAvailablityAsync(activityKey, adults, children, bookingDate, time);
        }
        
        public WCFTest.ActivitiesService.ActivityBookingDataContract BookActivityForUser(WCFTest.ActivitiesService.ActivityBookingDataContract bookingDetails) {
            return base.Channel.BookActivityForUser(bookingDetails);
        }
        
        public System.Threading.Tasks.Task<WCFTest.ActivitiesService.ActivityBookingDataContract> BookActivityForUserAsync(WCFTest.ActivitiesService.ActivityBookingDataContract bookingDetails) {
            return base.Channel.BookActivityForUserAsync(bookingDetails);
        }
        
        public WCFTest.ActivitiesService.ActivityBookingDataContract[] GetUsersCurrentActivityCart(string sessionKey, string userAgent) {
            return base.Channel.GetUsersCurrentActivityCart(sessionKey, userAgent);
        }
        
        public System.Threading.Tasks.Task<WCFTest.ActivitiesService.ActivityBookingDataContract[]> GetUsersCurrentActivityCartAsync(string sessionKey, string userAgent) {
            return base.Channel.GetUsersCurrentActivityCartAsync(sessionKey, userAgent);
        }
    }
}
